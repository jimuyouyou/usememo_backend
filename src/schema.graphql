# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Auth {
  """JWT access token"""
  accessToken: JWT!

  """JWT refresh token"""
  refreshToken: JWT!
  user: User!
}

input ChangePasswordInput {
  newPassword: String!
  oldPassword: String!
}

input CreateFolderInput {
  description: String!
  title: String!
}

input CreatePostInput {
  content: String!
  title: String!
}

input CreateWSetInput {
  description: String!
  folderId: String!
  title: String!
}

input CreateWordInput {
  audio: String!
  descLang: String!
  description: String!
  img: String!
  setId: String!
  title: String!
  titleLang: String!
}

input CreateXwordInput {
  audio: String!
  descLang: String!
  description: String!
  img: String!
  title: String!
  titleLang: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Folder {
  author: User

  """Identifies the date and time when the object was created."""
  createdAt: DateTime!
  description: String
  id: ID!
  title: String!

  """Identifies the date and time when the object was last updated."""
  updatedAt: DateTime!
}

type FolderConnection {
  edges: [FolderEdge!]
  pageInfo: PageInfo!
  totalCount: Int!
}

type FolderEdge {
  cursor: String!
  node: Folder!
}

input FolderOrder {
  direction: OrderDirection!
  field: FolderOrderField!
}

"""Properties by which connections can be ordered."""
enum FolderOrderField {
  createdAt
  description
  id
  title
  updatedAt
}

"""
A field whose value is a JSON Web Token (JWT): https://jwt.io/introduction.
"""
scalar JWT

input LoginInput {
  email: String!
  password: String!
}

type Mutation {
  changePassword(data: ChangePasswordInput!): User!
  createFolder(data: CreateFolderInput!): Folder!
  createPost(data: CreatePostInput!): Post!
  createWSet(data: CreateWSetInput!): WSet!
  createWord(data: CreateWordInput!): Word!
  createXword(data: CreateXwordInput!): Xword!
  login(data: LoginInput!): Auth!
  refreshToken(token: JWT!): Token!
  signup(data: SignupInput!): Auth!
  updateUser(data: UpdateUserInput!): User!
  updateWord(data: CreateWordInput!, id: String!): Word!
  updateXword(data: CreateXwordInput!, id: String!): Xword!
}

"""
Possible directions in which to order a list of items when provided an `orderBy` argument.
"""
enum OrderDirection {
  asc
  desc
}

type PageInfo {
  endCursor: String
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
}

type Post {
  author: User
  content: String

  """Identifies the date and time when the object was created."""
  createdAt: DateTime!
  id: ID!
  published: Boolean!
  title: String!

  """Identifies the date and time when the object was last updated."""
  updatedAt: DateTime!
}

type PostConnection {
  edges: [PostEdge!]
  pageInfo: PageInfo!
  totalCount: Int!
}

type PostEdge {
  cursor: String!
  node: Post!
}

input PostOrder {
  direction: OrderDirection!
  field: PostOrderField!
}

"""Properties by which post connections can be ordered."""
enum PostOrderField {
  content
  createdAt
  id
  published
  title
  updatedAt
}

type Query {
  folder(id: String!): Folder!
  folderWSets(id: String!): [WSet!]!
  hello(name: String!): String!
  helloWorld: String!
  me: User!
  me2: User!
  post: Post!
  publishedFolders(orderBy: FolderOrder, query: String): FolderConnection!
  publishedPosts(orderBy: PostOrder, query: String): PostConnection!
  publishedWSets(orderBy: WSetOrder, query: String): WSetConnection!
  publishedWords(orderBy: WordOrder, query: String): WordConnection!
  publishedXwords(orderBy: XwordOrder, query: String): XwordConnection!
  setWords(id: String!): [Word!]!
  titleXwords(title: String!, titleLang: String!): Xword!
  userFolders(id: String!): [Folder!]!
  userPosts(id: String!): [Post!]!
  userWSets(id: String!): [WSet!]!
  word(id: String!): Word!
  wset(id: String!): WSet!
  xword(id: String!): Xword!
}

"""User role"""
enum Role {
  ADMIN
  USER
}

input SignupInput {
  email: String!
  firstname: String
  lastname: String
  password: String!
}

type Subscription {
  folderCreated: Folder!
  postCreated: Post!
  wordCreated: Word!
  wsetCreated: WSet!
  xwordCreated: Xword!
}

type Token {
  """JWT access token"""
  accessToken: JWT!

  """JWT refresh token"""
  refreshToken: JWT!
}

input UpdateUserInput {
  firstname: String
  lastname: String
}

type User {
  """Identifies the date and time when the object was created."""
  createdAt: DateTime!
  email: String!
  firstname: String
  id: ID!
  lastname: String
  posts: [Post!]
  role: Role!

  """Identifies the date and time when the object was last updated."""
  updatedAt: DateTime!
}

type WSet {
  author: User

  """Identifies the date and time when the object was created."""
  createdAt: DateTime!
  description: String
  folder: Folder
  id: ID!
  title: String!

  """Identifies the date and time when the object was last updated."""
  updatedAt: DateTime!
}

type WSetConnection {
  edges: [WSetEdge!]
  pageInfo: PageInfo!
  totalCount: Int!
}

type WSetEdge {
  cursor: String!
  node: WSet!
}

input WSetOrder {
  direction: OrderDirection!
  field: WSetOrderField!
}

"""Properties by which connections can be ordered."""
enum WSetOrderField {
  createdAt
  description
  id
  title
  updatedAt
}

type Word {
  audio: String

  """Identifies the date and time when the object was created."""
  createdAt: DateTime!
  descLang: String
  description: String
  id: ID!
  img: String
  title: String!
  titleLang: String

  """Identifies the date and time when the object was last updated."""
  updatedAt: DateTime!
  wset: WSet
}

type WordConnection {
  edges: [WordEdge!]
  pageInfo: PageInfo!
  totalCount: Int!
}

type WordEdge {
  cursor: String!
  node: Word!
}

input WordOrder {
  direction: OrderDirection!
  field: WordOrderField!
}

"""Properties by which connections can be ordered."""
enum WordOrderField {
  createdAt
  description
  id
  title
  updatedAt
}

type Xword {
  audio: String

  """Identifies the date and time when the object was created."""
  createdAt: DateTime!
  descLang: String
  description: String
  id: ID!
  img: String
  title: String!
  titleLang: String

  """Identifies the date and time when the object was last updated."""
  updatedAt: DateTime!
}

type XwordConnection {
  edges: [XwordEdge!]
  pageInfo: PageInfo!
  totalCount: Int!
}

type XwordEdge {
  cursor: String!
  node: Xword!
}

input XwordOrder {
  direction: OrderDirection!
  field: XwordOrderField!
}

"""Properties by which connections can be ordered."""
enum XwordOrderField {
  createdAt
  description
  id
  title
  updatedAt
}