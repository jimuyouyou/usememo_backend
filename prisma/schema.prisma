datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  // previewFeatures = []
}

generator dbml {
  provider = "prisma-dbml-generator"
}

model User {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  email     String   @unique
  password  String
  firstname String?
  lastname  String?
  posts     Post[]
  folders   Folder[]
  wsets     WSet[]
  role      Role
}

model Post {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  published Boolean
  title     String
  content   String?
  author    User?    @relation(fields: [authorId], references: [id])
  authorId  String?
}

model Folder {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title     String
  description String
  author    User?    @relation(fields: [authorId], references: [id])
  authorId  String?
  wsets     WSet[]
}

model WSet {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title     String
  description String
  author    User?    @relation(fields: [authorId], references: [id])
  authorId  String?
  folder    Folder?  @relation(fields: [folderId], references: [id])
  folderId  String?
  words     Word[]
}

model Word {
  id          String   @id @default(cuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  title       String
  titleLang   String
  description String
  descLang    String
  img         String
  wset        WSet?    @relation(fields: [setId], references: [id])
  setId       String?
}

enum Role {
  ADMIN
  USER
}
